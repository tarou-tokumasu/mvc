@model IEnumerable<test.Models.Item>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            <!--カラム名-->
            @Html.DisplayNameFor(model => model.name)
        </th>
        <th>
            <!--変えるならこう-->
            @Html.DisplayName("書き換え")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.pic)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.cate)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            <!--＠item.nameと違うのはデータ型にあった表示方法になる-->
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.pic)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.cate)
        </td>
        <td>
            <!--/Item/Edit/108/なURLが生まれる-->
            <!--Items/Edit?id=108でも動作する-->
            <!--これだとItems/Edit/1?test=1-->
            @Html.ActionLink("えでぃと", "Edit", new { id = item.Id, test = 1 }) |
            <!--これはItems/Detail?test=1 エラー-->
            @Html.ActionLink("test", "Details", new { test = 1 }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
    </tr>
}

</table>
