@model test.Models.Item

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<!--<form action=/Items/Create method="post">の役割-->
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Item</h4>
    <hr />

    <!--TODO:decimal型とtinyintのフィールドは入力漏れを指摘してくれるけどstringのとこは通してしまう&各フィールドのエラーメッセージはどこで設定？-->
    @Html.ValidationSummary(true, "入力漏れがあります", new { @class = "text-danger" })

    <!--nameの入力欄-->
    <div class="form-group">
        <!--ラベル　nameとかpriceとか-->
        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
        <!--入力欄-->
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
        <!--なんかエラー時ここにエラーメッセージが赤文字で出る　ただ空白でも出てくれない-->
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
